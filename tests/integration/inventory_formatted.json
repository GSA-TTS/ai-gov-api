{
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_advanced_threat_detection.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "pathlib.Path",
            "pytest",
            "random",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_threat_detection_001_prompt_injection",
            "test_threat_detection_002_jailbreak_attempts",
            "test_threat_detection_003_data_exfiltration",
            "test_threat_detection_004_behavioral_anomalies",
            "test_threat_detection_005_llm_specific_attacks",
            "test_threat_detection_006_automated_attack_detection",
            "test_threat_detection_007_adversarial_input_detection"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_advanced_threat_detection_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_atd_006_ai_powered_llm_attack_detection",
            "test_zta_atd_007_realtime_behavioral_anomaly_detection",
            "test_zta_atd_008_advanced_persistent_threat_detection",
            "test_zta_atd_009_threat_intelligence_driven_detection",
            "test_zta_atd_010_zero_day_attack_detection",
            "test_zta_atd_011_api_security_threat_detection",
            "test_zta_atd_012_supply_chain_attack_detection",
            "test_zta_atd_013_quantum_resistant_threat_detection"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_api_design_verification.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_api_design_001_explicit_authentication",
            "test_api_design_002_secure_defaults",
            "test_api_design_003_input_validation",
            "test_api_design_004_error_information_disclosure",
            "test_api_design_005_rate_limiting",
            "test_api_design_006_request_size_limits",
            "test_api_design_007_response_headers_security",
            "test_api_design_008_cors_configuration",
            "test_api_design_009_parameter_pollution",
            "test_api_design_010_content_type_validation",
            "test_api_design_011_advanced_input_validation",
            "test_api_design_012_multimodal_content_validation",
            "test_api_design_013_model_authorization_enforcement",
            "test_api_design_014_api_versioning_security",
            "test_api_design_015_error_handling_security"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_api_design_verification_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_design_008_dynamic_trust_boundary_validation",
            "test_zta_design_009_api_contract_security_validation",
            "test_zta_design_010_zero_trust_microservices_architecture",
            "test_zta_design_011_api_gateway_zero_trust_integration",
            "test_zta_design_012_context_aware_api_security",
            "test_zta_design_013_api_threat_modeling_security_testing",
            "test_zta_design_014_api_observability_security_analytics",
            "test_zta_design_015_api_security_governance_compliance"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_authentication_authorization.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "hashlib",
            "httpx",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_auth_001",
            "test_zta_auth_002",
            "test_zta_auth_003",
            "test_zta_auth_004",
            "test_zta_auth_005",
            "test_zta_auth_006",
            "test_zta_auth_007",
            "test_zta_auth_008",
            "test_zta_auth_009",
            "test_zta_auth_010",
            "test_zta_auth_011",
            "test_zta_auth_012_concurrent_sessions",
            "test_zta_auth_013_key_rotation_handling",
            "test_zta_auth_014_rate_limiting_bypass_prevention",
            "test_zta_auth_015_cryptographic_validation",
            "test_zta_auth_016_multi_factor_authentication_readiness",
            "test_zta_auth_017_dynamic_permission_evaluation",
            "test_zta_auth_018_resource_based_authorization",
            "test_zta_auth_019_authorization_policy_enforcement",
            "test_zta_authz_granular_permissions_001",
            "test_zta_authz_privilege_escalation_001",
            "test_zta_authz_scope_isolation_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_authentication_authorization_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "jwt",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_auth_012_multi_factor_authentication_admin",
            "test_zta_auth_013_risk_based_authentication",
            "test_zta_auth_014_continuous_authentication_validation",
            "test_zta_auth_015_advanced_scope_based_authorization",
            "test_zta_auth_016_cryptographic_key_management_enhancement",
            "test_zta_auth_017_authentication_attack_detection_prevention",
            "test_zta_auth_018_federated_identity_cross_domain_authentication",
            "test_zta_auth_019_behavioral_biometrics_advanced_identity_verification"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_context_aware_access.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "datetime",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_zta_context_005_adaptive_risk_scoring",
            "test_zta_context_006_behavioral_analytics",
            "test_zta_context_007_dynamic_policy_adjustment",
            "test_zta_context_008_continuous_authorization",
            "test_zta_context_009_contextual_decision_engine",
            "test_zta_context_adaptive_001",
            "test_zta_context_behavior_001",
            "test_zta_context_comprehensive_001",
            "test_zta_context_device_001",
            "test_zta_context_geolocation_001",
            "test_zta_context_risk_scoring_001",
            "test_zta_context_temporal_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_context_aware_access_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "datetime.datetime",
            "datetime.timezone",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_caac_005_dynamic_risk_based_access_control",
            "test_zta_caac_006_behavioral_pattern_analysis",
            "test_zta_caac_007_geolocation_time_based_access_control",
            "test_zta_caac_008_device_environment_context_analysis",
            "test_zta_caac_009_adaptive_multi_factor_authentication",
            "test_zta_caac_010_network_context_threat_intelligence",
            "test_zta_caac_011_session_context_continuity",
            "test_zta_caac_012_machine_learning_based_context_analysis"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_continuous_monitoring_advanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_monitoring_006_compliance_reporting",
            "test_monitoring_007_incident_response_integration",
            "test_monitoring_008_log_tamper_evidence_assessment",
            "test_monitoring_009_real_time_security_correlation",
            "test_monitoring_010_behavioral_analytics_anomaly_detection",
            "test_monitoring_011_advanced_pii_detection_redaction",
            "test_monitoring_012_threat_intelligence_integration",
            "test_monitoring_013_compliance_monitoring_reporting",
            "test_monitoring_014_distributed_tracing_observability",
            "test_monitoring_015_security_orchestration_automated_response",
            "test_monitoring_016_continuous_security_posture_assessment"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_continuous_monitoring_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_cm_009_realtime_security_event_correlation",
            "test_zta_cm_010_behavioral_analytics_anomaly_detection",
            "test_zta_cm_011_advanced_pii_detection_redaction",
            "test_zta_cm_012_threat_intelligence_integration",
            "test_zta_cm_013_compliance_monitoring_reporting",
            "test_zta_cm_014_distributed_tracing_observability",
            "test_zta_cm_015_security_orchestration_automated_response",
            "test_zta_cm_016_continuous_security_posture_assessment"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_continuous_monitoring_verification.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "random",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_monitoring_001_real_time_logging",
            "test_monitoring_002_audit_trail_integrity",
            "test_monitoring_003_threat_correlation",
            "test_monitoring_004_performance_metrics",
            "test_monitoring_005_anomaly_detection"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_data_security.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_data_security_001_pii_protection",
            "test_data_security_002_encryption_in_transit",
            "test_data_security_003_data_classification",
            "test_data_security_004_data_retention_policies",
            "test_data_security_005_data_loss_prevention",
            "test_data_security_006_secure_data_processing",
            "test_data_security_007_data_integrity_verification",
            "test_data_security_008_secure_data_sharing"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_data_security_enhanced.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "pathlib.Path",
            "pytest",
            "secrets",
            "ssl",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_ds_008_end_to_end_encryption_validation",
            "test_zta_ds_009_advanced_key_management_hsm_integration",
            "test_zta_ds_010_data_loss_prevention_dlp_integration",
            "test_zta_ds_011_homomorphic_encryption_secure_processing",
            "test_zta_ds_012_quantum_resistant_cryptography",
            "test_zta_ds_013_secure_multi_party_computation",
            "test_zta_ds_014_data_residency_sovereignty_compliance",
            "test_zta_ds_015_advanced_threat_protection_for_data"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_identity_centric_advanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_identity_009_advanced_identity_verification_proofing",
            "test_identity_010_federated_identity_management",
            "test_identity_011_identity_analytics_risk_assessment",
            "test_identity_012_zero_trust_identity_architecture",
            "test_identity_013_identity_threat_detection_response",
            "test_identity_014_privacy_preserving_identity_management",
            "test_identity_015_identity_lifecycle_automation",
            "test_identity_016_identity_governance_compliance"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_identity_centric_basic.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_identity_001_api_key_generation_strength",
            "test_identity_002_api_key_hashing_storage",
            "test_identity_003_api_key_verification_process",
            "test_identity_004_api_key_lifecycle_management",
            "test_identity_005_user_account_linkage",
            "test_identity_006_jwt_authentication_review",
            "test_identity_007_identity_verification_endpoint_review",
            "test_identity_008_identity_lifecycle_gaps_assessment"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_identity_centric_security.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_identity_centric_001_identity_based_access_control",
            "test_identity_centric_002_identity_verification",
            "test_identity_centric_003_identity_context_enforcement",
            "test_identity_centric_004_dynamic_access_control",
            "test_identity_centric_005_identity_trust_scoring",
            "test_identity_centric_006_identity_lifecycle_integration",
            "test_identity_centric_007_cross_service_identity_validation"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_identity_centric_security_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_id_009_advanced_behavioral_biometrics",
            "test_zta_id_010_ml_based_identity_risk_scoring",
            "test_zta_id_011_advanced_device_trust_assessment",
            "test_zta_id_012_contextual_access_intelligence",
            "test_zta_id_013_identity_threat_hunting_analytics",
            "test_zta_id_014_identity_attack_simulation_purple_team",
            "test_zta_id_015_advanced_identity_federation_orchestration",
            "test_zta_id_016_identity_privacy_preservation_techniques"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_identity_lifecycle_key_management.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "math",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_identity_lifecycle_001_key_generation_security",
            "test_identity_lifecycle_002_key_rotation_mechanisms",
            "test_identity_lifecycle_003_key_revocation_procedures",
            "test_identity_lifecycle_004_key_storage_security",
            "test_identity_lifecycle_005_access_pattern_monitoring",
            "test_identity_lifecycle_006_compliance_validation"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_identity_lifecycle_key_management_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_ilkm_006_advanced_api_key_lifecycle_management",
            "test_zta_ilkm_007_quantum_resistant_key_generation",
            "test_zta_ilkm_008_automated_identity_verification_workflows",
            "test_zta_ilkm_009_identity_federation_sso_integration",
            "test_zta_ilkm_010_hardware_security_module_integration",
            "test_zta_ilkm_011_advanced_certificate_lifecycle_management",
            "test_zta_ilkm_012_identity_governance_compliance_automation",
            "test_zta_ilkm_013_advanced_session_management_controls"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_least_privilege.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "datetime",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_zta_lp_admin_001_scope_enhancement",
            "test_zta_lp_admin_002_scope_validation",
            "test_zta_lp_admin_003_scope_granularity",
            "test_zta_lp_admin_restriction_001",
            "test_zta_lp_capability_restriction_001",
            "test_zta_lp_dynamic_privilege_001",
            "test_zta_lp_least_privilege_validation_001",
            "test_zta_lp_privilege_escalation_001",
            "test_zta_lp_resource_quotas_001",
            "test_zta_lp_scope_boundary_001",
            "test_zta_lp_scope_minimal_001",
            "test_zta_lp_temporal_restrictions_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_least_privilege_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_lp_009_dynamic_privilege_reduction",
            "test_zta_lp_010_hierarchical_scope_management",
            "test_zta_lp_011_just_in_time_privilege_access",
            "test_zta_lp_012_resource_specific_access_control",
            "test_zta_lp_013_privilege_analytics_optimization",
            "test_zta_lp_014_cross_provider_privilege_isolation",
            "test_zta_lp_015_adaptive_privilege_management",
            "test_zta_lp_016_zero_standing_privileges"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_maturity_assessment_multi_layer_defense.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_maturity_001_defense_in_depth_authentication_authorization",
            "test_maturity_002_input_validation_layer_bypass",
            "test_maturity_003_perimeter_bypass_resilience",
            "test_maturity_004_cross_layer_visibility",
            "test_maturity_005_breach_containment_assessment",
            "test_maturity_006_integration_gap_assessment"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_maturity_assessment_multi_layer_defense_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_mmd_007_advanced_threat_modeling_integration",
            "test_zta_mmd_008_ai_powered_security_orchestration",
            "test_zta_mmd_009_quantum_resistant_defense_layers",
            "test_zta_mmd_010_advanced_deception_technologies",
            "test_zta_mmd_011_adaptive_security_architecture",
            "test_zta_mmd_012_advanced_compliance_automation",
            "test_zta_mmd_013_security_ecosystem_integration",
            "test_zta_mmd_014_continuous_security_validation"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_network_segmentation.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "socket",
            "subprocess",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_network_001_container_isolation",
            "test_network_002_micro_segmentation_policies",
            "test_network_003_egress_control",
            "test_network_004_database_network_exposure",
            "test_network_005_secure_protocol_enforcement"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_network_segmentation_advanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "socket",
            "subprocess",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_network_006_infrastructure_security_assessment",
            "test_network_007_software_defined_perimeter",
            "test_network_008_zero_trust_network_architecture",
            "test_network_009_network_monitoring_integration"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_network_segmentation_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_net_007_software_defined_perimeter",
            "test_zta_net_008_zero_trust_network_architecture",
            "test_zta_net_009_application_layer_traffic_inspection",
            "test_zta_net_010_service_mesh_security",
            "test_zta_net_011_dynamic_network_segmentation",
            "test_zta_net_012_container_network_security",
            "test_zta_net_013_edge_computing_network_security",
            "test_zta_net_014_network_analytics_behavioral_monitoring"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_observability.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_observability_001_comprehensive_logging",
            "test_observability_002_identity_tracking",
            "test_observability_003_llm_interaction_monitoring",
            "test_observability_004_security_event_logging",
            "test_observability_005_contextual_log_richness",
            "test_observability_006_siem_integration_assessment"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_observability_advanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_observability_007_realtime_analytics_framework",
            "test_observability_008_advanced_threat_correlation",
            "test_observability_009_behavioral_baseline_monitoring",
            "test_observability_010_distributed_tracing_integration",
            "test_observability_011_compliance_monitoring_automation",
            "test_observability_012_security_orchestration_integration",
            "test_observability_013_ai_powered_anomaly_detection",
            "test_observability_014_threat_intelligence_integration",
            "test_observability_015_continuous_posture_assessment",
            "test_observability_016_predictive_analytics_framework"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_observability_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_obs_009_realtime_security_event_correlation",
            "test_zta_obs_010_distributed_tracing_performance_monitoring",
            "test_zta_obs_011_security_metrics_kpi_dashboards",
            "test_zta_obs_012_behavioral_analytics_integration",
            "test_zta_obs_013_threat_intelligence_integration",
            "test_zta_obs_014_compliance_monitoring_reporting",
            "test_zta_obs_015_advanced_log_analytics_search",
            "test_zta_obs_016_observability_as_code_integration"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_security_posture_assessment.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_security_posture_001_authentication_control_effectiveness",
            "test_security_posture_002_authorization_control_effectiveness",
            "test_security_posture_003_logging_infrastructure_foundation",
            "test_security_posture_004_input_validation_controls",
            "test_security_posture_005_zero_trust_maturity_framework_gap",
            "test_security_posture_006_automated_control_validation_gap",
            "test_security_posture_007_continuous_security_control_validation",
            "test_security_posture_008_zero_trust_maturity_assessment_framework"
        ]
    },
    "/ai-gov-api/tests/integration/7_12_zero_trust/test_security_posture_assessment_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_zta_spa_007_continuous_security_control_validation",
            "test_zta_spa_008_zero_trust_maturity_assessment_framework",
            "test_zta_spa_009_risk_based_security_posture_evaluation",
            "test_zta_spa_010_automated_security_architecture_validation",
            "test_zta_spa_011_security_metrics_kpi_framework",
            "test_zta_spa_012_third_party_security_assessment_integration",
            "test_zta_spa_013_continuous_security_improvement_automation",
            "test_zta_spa_014_regulatory_compliance_posture_assessment"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_agency_specific_testing.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_fv_agy_isolation_concurrent_requests_001",
            "test_fv_agy_isolation_provider_clients_001",
            "test_fv_agy_key_expiration_001",
            "test_fv_agy_key_revocation_001",
            "test_fv_agy_scope_chat_allowed_001",
            "test_fv_agy_scope_chat_denied_001",
            "test_fv_agy_scope_embed_allowed_001",
            "test_fv_agy_scope_embed_denied_001",
            "test_fv_agy_scope_models_allowed_001",
            "test_fv_agy_scope_models_no_auth_denied_001",
            "test_fv_agy_usage_chat_attribution_001",
            "test_fv_agy_usage_embed_attribution_001",
            "test_fv_agy_usage_multimodal_tokens_001",
            "test_fv_agy_usage_streaming_attribution_001",
            "test_fv_agy_user_key_creation_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_business_logic_validation.py": {
        "packages": [
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_fv_blv_capability_matching_001",
            "test_fv_blv_capability_matching_002",
            "test_fv_blv_error_handling_001",
            "test_fv_blv_failover_simulation_001",
            "test_fv_blv_load_balancing_001",
            "test_fv_blv_model_availability_001",
            "test_fv_blv_provider_consistency_001",
            "test_fv_blv_route_bedrock_001",
            "test_fv_blv_route_openai_001",
            "test_fv_blv_route_vertexai_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_configuration_management.py": {
        "packages": [
            "config.config",
            "config.logger",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_fv_cfm_backend_map_cap_mismatch_startup_001",
            "test_fv_cfm_backend_map_initialization_001",
            "test_fv_cfm_backend_map_invalid_arn_001",
            "test_fv_cfm_backend_map_invalid_project_id_001",
            "test_fv_cfm_backend_map_unknown_provider_001",
            "test_fv_cfm_backend_map_valid_route_001",
            "test_fv_cfm_env_database_connection_001",
            "test_fv_cfm_env_missing_var_bedrock_region_001",
            "test_fv_cfm_env_missing_var_vertex_creds_001",
            "test_fv_cfm_env_settings_override_001",
            "test_fv_cfm_settings_cache_consistency_001",
            "test_fv_cfm_settings_type_validation_001",
            "test_fv_cfm_settings_validation_required_fields_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_database_management.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_fv_dbm_concurrency_connection_cleanup_001",
            "test_fv_dbm_concurrency_key_lookup_001",
            "test_fv_dbm_concurrency_session_isolation_001",
            "test_fv_dbm_concurrency_user_creation_001",
            "test_fv_dbm_migrate_apply_all_001",
            "test_fv_dbm_migrate_data_migration_001",
            "test_fv_dbm_migrate_downgrade_upgrade_001",
            "test_fv_dbm_migrate_new_model_field_001",
            "test_fv_dbm_session_error_handling_001",
            "test_fv_dbm_session_per_request_001",
            "test_fv_dbm_session_pool_exhaustion_001",
            "test_fv_dbm_session_rollback_on_exception_001",
            "test_fv_dbm_tx_billing_record_fail_001",
            "test_fv_dbm_tx_constraint_violation_handling_001",
            "test_fv_dbm_tx_user_create_rollback_001",
            "test_fv_dbm_tx_user_create_success_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_edge_cases.py": {
        "packages": [],
        "test_cases": []
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_exception_handling.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_fv_eh_adapter_malformed_provider_response_001",
            "test_fv_eh_adapter_unexpected_finish_reason_001",
            "test_fv_eh_internal_custom_api_exception_001",
            "test_fv_eh_internal_streaming_error_001",
            "test_fv_eh_internal_unhandled_in_route_001",
            "test_fv_eh_provider_bedrock_accessdenied_001",
            "test_fv_eh_provider_bedrock_throttling_001",
            "test_fv_eh_provider_bedrock_validation_001",
            "test_fv_eh_provider_timeout_001",
            "test_fv_eh_provider_vertexai_invalid_arg_001",
            "test_fv_eh_provider_vertexai_permission_denied_001",
            "test_fv_eh_provider_vertexai_unavailable_001",
            "test_fv_eh_sensitive_no_config_details_in_response_001",
            "test_fv_eh_sensitive_no_provider_internal_details_001",
            "test_fv_eh_sensitive_no_stacktrace_in_response_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_input_validation.py": {
        "packages": [
            "config.config",
            "config.logger",
            "fixtures.multimodal_fixtures.MultiModalFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_fv_inp_chat_messages_001",
            "test_fv_inp_chat_messages_002",
            "test_fv_inp_chat_messages_003",
            "test_fv_inp_chat_model_001",
            "test_fv_inp_chat_model_002",
            "test_fv_inp_chat_temp_001",
            "test_fv_inp_chat_temp_002",
            "test_fv_inp_chat_tokens_001",
            "test_fv_inp_chat_tokens_002",
            "test_fv_inp_combinations_001",
            "test_fv_inp_edge_cases_001",
            "test_fv_inp_embedding_input_001",
            "test_fv_inp_embedding_input_002",
            "test_fv_inp_embedding_model_001",
            "test_fv_inp_file_invalid_001",
            "test_fv_inp_file_valid_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_llm_functional.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_fv_llm_model_capabilities_validation_001",
            "test_fv_llm_param_frequency_penalty_001",
            "test_fv_llm_param_presence_penalty_001",
            "test_fv_llm_param_stop_sequence_001",
            "test_fv_llm_param_system_message_effect_001",
            "test_fv_llm_param_temp_0_determinism_001",
            "test_fv_llm_param_temp_high_variability_001",
            "test_fv_llm_param_top_p_effect_001",
            "test_fv_llm_provider_consistency_001",
            "test_fv_llm_stream_func_content_order_001",
            "test_fv_llm_stream_func_finish_reason_last_chunk_001",
            "test_fv_llm_stream_func_tool_calls_001",
            "test_fv_llm_stream_sse_format_001",
            "test_fv_llm_token_count_accuracy_001",
            "test_fv_llm_token_maxtokens_ignored_if_larger_001",
            "test_fv_llm_token_maxtokens_respected_001",
            "test_fv_llm_token_prompt_exceeds_ctx_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_logging_monitoring.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_fv_log_api_key_scope_001",
            "test_fv_log_audit_trail_001",
            "test_fv_log_data_retention_001",
            "test_fv_log_error_details_001",
            "test_fv_log_ip_address_001",
            "test_fv_log_model_version_001",
            "test_fv_log_provider_errors_001",
            "test_fv_log_regulatory_compliance_001",
            "test_fv_log_request_body_size_001",
            "test_fv_log_request_correlation_id_001",
            "test_fv_log_request_start_end_001",
            "test_fv_log_resource_usage_001",
            "test_fv_log_response_headers_001",
            "test_fv_log_response_size_001",
            "test_fv_log_response_status_codes_001",
            "test_fv_log_response_time_001",
            "test_fv_log_security_events_001",
            "test_fv_log_throughput_001",
            "test_fv_log_token_usage_001",
            "test_fv_log_user_agent_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_multi_provider.py": {
        "packages": [
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_fv_mpv_feature_stream_consistency_001",
            "test_fv_mpv_feature_unsupported_param_001",
            "test_fv_mpv_model_selection_bedrock_001",
            "test_fv_mpv_model_selection_vertexai_001",
            "test_fv_mpv_provider_consistency_validation_001",
            "test_fv_mpv_provider_parameter_ranges_001",
            "test_fv_mpv_req_chat_msg_roles_bedrock_001",
            "test_fv_mpv_req_chat_msg_roles_vertexai_001",
            "test_fv_mpv_req_chat_params_bedrock_001",
            "test_fv_mpv_req_chat_params_vertexai_001",
            "test_fv_mpv_req_embed_input_bedrock_001",
            "test_fv_mpv_req_embed_input_vertexai_001",
            "test_fv_mpv_req_multimodal_image_bedrock_001",
            "test_fv_mpv_req_multimodal_image_vertexai_001",
            "test_fv_mpv_resp_chat_content_bedrock_001",
            "test_fv_mpv_resp_chat_content_vertexai_001",
            "test_fv_mpv_resp_chat_usage_bedrock_001",
            "test_fv_mpv_resp_chat_usage_vertexai_001",
            "test_fv_mpv_resp_embed_vector_bedrock_001",
            "test_fv_mpv_resp_embed_vector_vertexai_001",
            "test_fv_mpv_resp_error_translation_bedrock_001",
            "test_fv_mpv_resp_error_translation_vertexai_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_openapi_conformance.py": {
        "packages": [
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_fv_openapi_chat_completions_request_schema_001",
            "test_fv_openapi_chat_completions_response_schema_001",
            "test_fv_openapi_content_type_json_001",
            "test_fv_openapi_content_type_stream_001",
            "test_fv_openapi_embeddings_request_schema_001",
            "test_fv_openapi_embeddings_response_schema_001",
            "test_fv_openapi_error_response_fields_001",
            "test_fv_openapi_error_response_format_001",
            "test_fv_openapi_http_status_200_001",
            "test_fv_openapi_http_status_401_001",
            "test_fv_openapi_http_status_422_001",
            "test_fv_openapi_models_response_schema_001",
            "test_fv_openapi_param_validation_ranges_001",
            "test_fv_openapi_param_validation_types_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_pre_runtime_protection_verification.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_fv_prp_endpoint_models_availability_001",
            "test_fv_prp_enum_chat_finishreason_001",
            "test_fv_prp_error_response_format_001",
            "test_fv_prp_multimodal_schema_validation_001",
            "test_fv_prp_openapi_accessibility_001",
            "test_fv_prp_param_chat_maxtokens_001",
            "test_fv_prp_param_validation_constraint_001",
            "test_fv_prp_resp_field_chat_usage_001",
            "test_fv_prp_resp_status_code_auth_001",
            "test_fv_prp_response_content_type_001",
            "test_fv_prp_schema_completeness_001",
            "test_fv_prp_schema_version_consistency_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_response_quality.py": {
        "packages": [
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "re",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_fv_quality_accuracy_uncertainty_handling_001",
            "test_fv_quality_accuracy_verifiable_facts_001",
            "test_fv_quality_coherence_consistency_001",
            "test_fv_quality_coherence_logical_001",
            "test_fv_quality_coherence_structure_001",
            "test_fv_quality_completeness_depth_001",
            "test_fv_quality_completeness_question_coverage_001",
            "test_fv_quality_relevance_contextual_001",
            "test_fv_quality_relevance_factual_001",
            "test_fv_quality_relevance_task_specific_001",
            "test_fv_quality_safety_harmful_content_001",
            "test_fv_quality_safety_pii_protection_001",
            "test_fv_quality_safety_professional_tone_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_2_functional/test_response_validation.py": {
        "packages": [
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_fv_resp_chat_multimodal_001",
            "test_fv_resp_chat_success_001",
            "test_fv_resp_embed_success_001",
            "test_fv_resp_error_422_pydantic_001",
            "test_fv_resp_error_authentication_001",
            "test_fv_resp_error_generic_001",
            "test_fv_resp_error_provider_001",
            "test_fv_resp_headers_chat_001",
            "test_fv_resp_headers_stream_001",
            "test_fv_resp_models_list_001",
            "test_fv_resp_stream_chunk_schema_001",
            "test_fv_resp_stream_format_001",
            "test_fv_resp_stream_termination_001",
            "test_fv_resp_usage_chat_nonstream_001",
            "test_fv_resp_usage_chat_stream_001",
            "test_fv_resp_usage_embed_001",
            "test_fv_resp_usage_multimodal_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_audit_logging_advanced_security.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator",
            "uuid"
        ],
        "test_cases": [
            "test_audit_automated_alerting_001",
            "test_audit_log_aggregation_001",
            "test_audit_log_high_risk_prompts_001",
            "test_audit_log_provider_errors_001",
            "test_audit_log_siem_integration_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_audit_logging_advanced_security_2.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator",
            "uuid"
        ],
        "test_cases": [
            "test_audit_comprehensive_monitoring_001",
            "test_audit_monitoring_performance_001",
            "test_audit_real_time_monitoring_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_audit_logging_security.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_anomaly_detection_001",
            "test_audit_log_auth_failures_001",
            "test_audit_log_authz_failures_001",
            "test_audit_log_raw_apikey_001",
            "test_audit_log_sensitive_prompt_response_001",
            "test_compliance_monitoring_001",
            "test_correlation_analysis_001",
            "test_forensic_analysis_001",
            "test_log_integrity_001",
            "test_log_retention_001",
            "test_pii_filtering_001",
            "test_security_event_logging_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_cross_agency_data_protection.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator",
            "uuid"
        ],
        "test_cases": [
            "test_administrative_scoping_001",
            "test_billing_data_segregation_001",
            "test_context_isolation_001",
            "test_data_residency_001",
            "test_incident_isolation_001",
            "test_log_data_segregation_001",
            "test_performance_isolation_001",
            "test_tenant_isolation_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_cross_agency_data_protection_advanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_cda_api_key_manipulation_001",
            "test_cda_audit_log_isolation_001",
            "test_cda_concurrent_access_001",
            "test_cda_configuration_isolation_001",
            "test_cda_context_validation_001",
            "test_cda_conversation_history_001",
            "test_cda_error_message_isolation_001",
            "test_cda_manager_id_spoofing_001",
            "test_cda_organization_boundary_001",
            "test_cda_shared_resource_isolation_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_cryptographic_advanced.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "hashlib",
            "httpx",
            "pathlib.Path",
            "pytest",
            "re",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_crypto_algorithm_strength_001",
            "test_crypto_certificate_management_001",
            "test_crypto_compliance_validation_001",
            "test_crypto_hash_performance_001",
            "test_crypto_key_derivation_001",
            "test_crypto_key_rotation_001",
            "test_crypto_library_validation_001",
            "test_crypto_performance_scalability_001",
            "test_crypto_random_number_generation_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_cryptographic_security.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "hashlib",
            "httpx",
            "pathlib.Path",
            "pytest",
            "re",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_api_key_entropy_001",
            "test_certificate_validation_001",
            "test_fips_compliance_001",
            "test_hash_algorithm_strength_001",
            "test_key_rotation_support_001",
            "test_nist_compliance_001",
            "test_secure_random_generation_001",
            "test_side_channel_resistance_001",
            "test_timing_attack_prevention_001",
            "test_tls_configuration_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_database_advanced_security.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "hashlib",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "threading",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator",
            "uuid"
        ],
        "test_cases": [
            "test_dbsec_conn_pool_exhaust_001",
            "test_dbsec_data_consistency_key_deletion_001",
            "test_dbsec_session_hijack_001",
            "test_dbsec_sqli_apikey_lookup_001",
            "test_dbsec_sqli_user_email_param_001",
            "test_dbsec_txn_auth_rollback_001",
            "test_dbsec_txn_billing_concurrency_001",
            "test_dbsec_txn_user_create_unique_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_database_advanced_security_2.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "pathlib.Path",
            "psutil",
            "pytest",
            "sys",
            "threading",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator",
            "uuid"
        ],
        "test_cases": [
            "test_dbsec_backup_recovery_001",
            "test_dbsec_concurrent_modification_001",
            "test_dbsec_connection_leak_001",
            "test_dbsec_deadlock_detection_001",
            "test_dbsec_isolation_level_001",
            "test_dbsec_query_timeout_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_database_advanced_security_3.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "threading",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator",
            "uuid"
        ],
        "test_cases": [
            "test_dbsec_audit_trail_001",
            "test_dbsec_index_performance_001",
            "test_dbsec_memory_usage_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_database_security.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator",
            "uuid"
        ],
        "test_cases": [
            "test_audit_trail_001",
            "test_concurrent_access_001",
            "test_connection_management_001",
            "test_deadlock_prevention_001",
            "test_session_isolation_001",
            "test_sql_injection_prevention_001",
            "test_transaction_integrity_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_error_handling_security.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_sec_error_except_001_unhandled_exception_prevention",
            "test_sec_error_file_001_validation_error_content",
            "test_sec_error_file_002_malicious_filename_handling",
            "test_sec_error_prov_001_bedrock_error_sanitization",
            "test_sec_error_prov_002_vertex_error_sanitization",
            "test_sec_error_prov_003_provider_consistency",
            "test_sec_error_timing_001_response_timing_consistency",
            "test_sec_error_timing_002_reconnaissance_value",
            "test_sec_error_val_001_internal_path_disclosure",
            "test_sec_error_val_002_configuration_detail_exposure",
            "test_sec_error_val_003_model_information_leakage"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_infrastructure_advanced_security.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "socket",
            "ssl",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "urllib.parse.urlparse",
            "utils.security_validators.SecurityValidator",
            "uuid"
        ],
        "test_cases": [
            "test_infra_container_filesystem_readonly_001",
            "test_infra_container_least_privilege_001",
            "test_infra_iam_least_privilege_llm_001",
            "test_infra_network_provider_encryption_001",
            "test_infra_secrets_db_conn_string_001",
            "test_infra_secrets_provider_keys_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_infrastructure_advanced_security_2.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator",
            "uuid"
        ],
        "test_cases": [
            "test_infra_cloud_governance_001",
            "test_infra_comprehensive_security_001",
            "test_infra_configuration_drift_001",
            "test_infra_container_escape_001",
            "test_infra_disaster_recovery_001",
            "test_infra_monitoring_security_001",
            "test_infra_secrets_rotation_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_infrastructure_security.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "datetime",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "socket",
            "ssl",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "urllib.parse.urlparse",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_backup_security_001",
            "test_cloud_iam_001",
            "test_container_security_001",
            "test_infra_container_vuln_scan_001",
            "test_infra_network_port_exposure_001",
            "test_network_segmentation_001",
            "test_runtime_security_001",
            "test_secrets_management_001",
            "test_tls_encryption_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_llm_model_security.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_confidence_manipulation_001",
            "test_homomorphic_encryption_001",
            "test_model_architecture_exposure_001",
            "test_model_fingerprinting_001",
            "test_output_steering_001",
            "test_provider_metadata_leakage_001",
            "test_system_prompt_extraction_001",
            "test_training_data_leakage_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_llm_model_security_advanced.py": {
        "packages": [
            "config.config",
            "config.logger",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_ms_context_confusion_001",
            "test_ms_embedding_manipulation_001",
            "test_ms_knowledge_manipulation_001",
            "test_ms_model_architecture_001",
            "test_ms_output_manipulation_001",
            "test_ms_provider_metadata_001",
            "test_ms_system_prompt_001",
            "test_ms_training_data_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_multimodal_advanced_filename.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "fixtures.multimodal_fixtures.MultiModalFixtures",
            "httpx",
            "io",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator",
            "zipfile"
        ],
        "test_cases": [
            "test_sec_mm_content_001_malicious_embedded_content",
            "test_sec_mm_content_002_zip_bomb_decompression",
            "test_sec_mm_content_003_mime_type_spoofing",
            "test_sec_mm_encoding_001_base64_security",
            "test_sec_mm_filename_001_path_traversal",
            "test_sec_mm_filename_002_command_injection",
            "test_sec_mm_filename_003_unicode_normalization"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_multimodal_basic_security.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "fixtures.multimodal_fixtures.MultiModalFixtures",
            "httpx",
            "io",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator",
            "zipfile"
        ],
        "test_cases": [
            "test_base64_security_001",
            "test_file_content_validation_001",
            "test_filename_security_001",
            "test_mime_spoofing_001",
            "test_provider_specific_security_001",
            "test_resource_exhaustion_001",
            "test_unicode_attacks_001",
            "test_zip_bomb_protection_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_multimodal_metadata_resource.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "fixtures.multimodal_fixtures.MultiModalFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_sec_mm_injection_001_metadata_injection_attacks",
            "test_sec_mm_metadata_001_information_disclosure",
            "test_sec_mm_privacy_001_data_leakage_prevention",
            "test_sec_mm_resource_001_concurrent_processing",
            "test_sec_mm_resource_002_memory_exhaustion_protection",
            "test_sec_mm_steganography_001_hidden_data_detection",
            "test_sec_mm_timing_001_processing_time_analysis"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api10_unsafe_api_consumption.py": {
        "packages": [
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_api10_downstream_error_handling_001",
            "test_api10_downstream_injection_001",
            "test_api10_input_sanitization_001",
            "test_api10_model_parameter_validation_001",
            "test_api10_response_validation_001",
            "test_api10_unsafe_consumption_comprehensive_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api10_unsafe_api_consumption_advanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "httpx.ConnectError",
            "httpx.ConnectTimeout",
            "httpx.ReadTimeout",
            "httpx.TLSError",
            "httpx.TimeoutException",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "ssl",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.MagicMock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_uca_provider_authentication_failure_001",
            "test_uca_provider_connection_security_001",
            "test_uca_provider_data_leakage_001",
            "test_uca_provider_harmful_content_001",
            "test_uca_provider_malformed_json_001",
            "test_uca_provider_schema_mismatch_001",
            "test_uca_provider_timeout_001",
            "test_uca_provider_unexpected_error_code_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api1_bola.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_bola_api_key_001",
            "test_bola_api_key_enumeration_001",
            "test_bola_chat_session_001",
            "test_bola_concurrent_access_001",
            "test_bola_integration_testing_001",
            "test_bola_llm_usage_001",
            "test_bola_model_access_001",
            "test_bola_parameter_manipulation_001",
            "test_bola_user_access_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api2_authentication_advanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.security_fixtures.SecurityFixtures",
            "hashlib",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "secrets",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_api2_auth_state_persistence_001",
            "test_api2_concurrent_auth_001",
            "test_api2_key_generation_entropy_001",
            "test_api2_key_state_lifecycle_001",
            "test_api2_key_tampering_001",
            "test_api2_parameter_pollution_001",
            "test_api2_privilege_escalation_001",
            "test_api2_scope_validation_001",
            "test_api2_secure_storage_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api3_data_exposure.py": {
        "packages": [
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_api3_cross_organization_data_001",
            "test_api3_embedding_response_001",
            "test_api3_error_response_001",
            "test_api3_headers_exposure_001",
            "test_api3_metadata_exposure_001",
            "test_api3_models_endpoint_001",
            "test_api3_response_schema_001",
            "test_api3_streaming_response_001",
            "test_api3_usage_metrics_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api3_data_exposure_advanced.py": {
        "packages": [
            "config.config",
            "config.logger",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_api3_configuration_data_exposure_001",
            "test_api3_debug_information_exposure_001",
            "test_api3_internal_metadata_exposure_001",
            "test_api3_internal_processing_details_001",
            "test_api3_mass_assignment_001",
            "test_api3_raw_provider_response_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api4_resource_consumption.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_api4_concurrent_requests_001",
            "test_api4_embedding_consumption_001",
            "test_api4_large_payload_001",
            "test_api4_memory_consumption_001",
            "test_api4_quota_enforcement_001",
            "test_api4_rate_limiting_001",
            "test_api4_streaming_consumption_001",
            "test_api4_token_consumption_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api4_resource_consumption_advanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.multimodal_fixtures.MultiModalFixtures",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_api4_concurrent_resource_001",
            "test_api4_cost_based_limits_001",
            "test_api4_memory_consumption_001",
            "test_api4_network_bandwidth_001",
            "test_api4_provider_resource_limits_001",
            "test_api4_resource_cleanup_001",
            "test_api4_resource_exhaustion_001",
            "test_api4_storage_consumption_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api5_advanced_authorization.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_bfla_admin_token_create_001",
            "test_bfla_admin_token_set_active_001",
            "test_bfla_admin_user_create_001",
            "test_bfla_admin_user_get_001",
            "test_bfla_admin_user_update_001",
            "test_bfla_authorization_bypass_comprehensive_001",
            "test_bfla_endpoint_discovery_001",
            "test_bfla_http_method_tampering_001",
            "test_bfla_privilege_escalation_001",
            "test_bfla_resource_isolation_001",
            "test_bfla_scope_bypass_attempt_001",
            "test_bfla_scope_combination_001",
            "test_bfla_scope_edge_cases_001",
            "test_bfla_scope_validation_timing_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api5_basic_authorization.py": {
        "packages": [
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_api5_admin_function_access_001",
            "test_api5_function_bypass_001",
            "test_api5_function_discovery_001",
            "test_api5_horizontal_privilege_escalation_001",
            "test_api5_method_tampering_001",
            "test_api5_scope_verification_001",
            "test_api5_vertical_privilege_escalation_001",
            "test_bfla_llm_embedding_001",
            "test_bfla_llm_inference_001",
            "test_bfla_models_list_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api67_business_flows_ssrf.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.multimodal_fixtures.MultiModalFixtures",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_api6_business_logic_bypass_001",
            "test_api6_llm_conversation_flow_001",
            "test_api6_workflow_state_manipulation_001",
            "test_api7_dns_rebinding_001",
            "test_api7_internal_network_access_001",
            "test_api7_url_redirection_001",
            "test_api7_url_scheme_validation_001",
            "test_error_extreme_load_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api6_business_flows.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_api6_business_logic_bypass_001",
            "test_api6_competitive_intelligence_001",
            "test_api6_cost_exploitation_001",
            "test_api6_data_mining_prevention_001",
            "test_api6_llm_inference_abuse_001",
            "test_api6_sensitive_flow_protection_001",
            "test_api6_workflow_automation_abuse_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api7_ssrf.py": {
        "packages": [
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_api7_blind_ssrf_001",
            "test_api7_cloud_metadata_ssrf_001",
            "test_api7_internal_network_ssrf_001",
            "test_api7_ssrf_comprehensive_001",
            "test_api7_ssrf_via_file_upload_001",
            "test_api7_ssrf_via_redirects_001",
            "test_api7_url_parsing_bypass_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api8_security_misconfiguration.py": {
        "packages": [
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_api8_authentication_misconfiguration_001",
            "test_api8_content_type_validation_001",
            "test_api8_cors_configuration_001",
            "test_api8_debug_endpoints_001",
            "test_api8_error_handling_001",
            "test_api8_http_headers_001",
            "test_api8_security_misconfiguration_comprehensive_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api8_security_misconfiguration_advanced.py": {
        "packages": [
            "config.config",
            "config.logger",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "re",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_api8_container_security_001",
            "test_api8_cors_policy_001",
            "test_api8_debug_mode_001",
            "test_api8_error_handling_001",
            "test_api8_http_headers_001",
            "test_api8_logging_sensitivity_001",
            "test_api8_secrets_management_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api9_inventory_management.py": {
        "packages": [
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_api9_deprecated_endpoints_001",
            "test_api9_documentation_exposure_001",
            "test_api9_endpoint_enumeration_001",
            "test_api9_improper_inventory_comprehensive_001",
            "test_api9_inventory_consistency_001",
            "test_api9_version_exposure_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api9_inventory_management_advanced.py": {
        "packages": [
            "config.config",
            "config.logger",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_api9_configuration_drift_001",
            "test_api9_documentation_accuracy_001",
            "test_api9_endpoint_enumeration_001",
            "test_api9_model_inventory_001",
            "test_api9_openapi_schema_001",
            "test_api9_shadow_endpoints_001",
            "test_api9_version_management_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_owasp_api_authentication.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_api2_auth_bypass_attempts_001",
            "test_api2_brute_force_protection_001",
            "test_api2_concurrent_auth_001",
            "test_api2_error_message_security_001",
            "test_api2_expired_key_simulation_001",
            "test_api2_invalid_key_001",
            "test_api2_malformed_header_001",
            "test_api2_missing_auth_001",
            "test_api2_session_management_001",
            "test_api2_timing_attack_001",
            "test_api2_token_leakage_001",
            "test_key_timing"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_prompt_injection.py": {
        "packages": [
            "config.config",
            "config.logger",
            "fixtures.multimodal_fixtures.MultiModalFixtures",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_jailbreak_context_switching_001",
            "test_jailbreak_hypothetical_001",
            "test_jailbreak_roleplay_001",
            "test_pij_direct_001",
            "test_pij_encoding_bypass_001",
            "test_pij_file_name_001",
            "test_pij_multi_turn_001",
            "test_pij_role_confusion_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_prompt_injection_advanced.py": {
        "packages": [
            "base64",
            "config.config",
            "config.logger",
            "fixtures.multimodal_fixtures.MultiModalFixtures",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_pij_direct_002",
            "test_pij_embedding_001",
            "test_pij_file_content_001",
            "test_pij_file_name_001",
            "test_pij_file_name_002",
            "test_pij_file_name_003",
            "test_pij_jailbreak_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_prompt_injection_jailbreak.py": {
        "packages": [
            "config.config",
            "config.logger",
            "fixtures.multimodal_fixtures.MultiModalFixtures",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_pij_chain_001",
            "test_pij_framework_001",
            "test_pij_framework_002",
            "test_pij_jailbreak_002",
            "test_pij_jailbreak_003",
            "test_pij_multimodal_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_security_middleware_headers.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_content_type_validation_001",
            "test_cors_configuration_001",
            "test_ddos_protection_001",
            "test_error_disclosure_prevention_001",
            "test_http_security_headers_001",
            "test_middleware_order_001",
            "test_rate_limiting_001",
            "test_request_validation_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_security_middleware_headers_advanced.py": {
        "packages": [
            "config.config",
            "config.logger",
            "fixtures.security_fixtures.SecurityFixtures",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_httpsec_cors_advanced_001",
            "test_httpsec_header_comprehensive_001",
            "test_httpsec_middleware_error_handling_001",
            "test_httpsec_middleware_pii_filtering_001",
            "test_httpsec_rate_limiting_001",
            "test_httpsec_request_size_limits_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_supply_chain_advanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "urllib.parse.urlparse",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_scs_artifact_signing_001",
            "test_scs_ci_cd_pipeline_001",
            "test_scs_compliance_validation_001",
            "test_scs_dependency_update_001",
            "test_scs_incident_response_001",
            "test_scs_license_compliance_001",
            "test_scs_sbom_generation_001",
            "test_scs_source_code_integrity_001",
            "test_scs_supply_chain_monitoring_001",
            "test_scs_third_party_risk_001",
            "test_scs_vendor_assessment_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_3_security/test_supply_chain_security.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "fixtures.auth_fixtures.AuthFixtures",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "urllib.parse.urlparse",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_artifact_signing_001",
            "test_cicd_security_001",
            "test_container_security_001",
            "test_dependency_validation_001",
            "test_provider_sdk_integrity_001",
            "test_sbom_validation_001",
            "test_update_security_001",
            "test_vendor_risk_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_application_server_performance.py": {
        "packages": [
            "asyncio",
            "concurrent.futures",
            "config.config",
            "config.logger",
            "gc",
            "httpx",
            "os",
            "pathlib.Path",
            "psutil",
            "pytest",
            "statistics",
            "sys",
            "threading",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_perf_app_lifecycle_shutdown_graceful_005",
            "test_perf_dependency_injection_optimization_001",
            "test_perf_middleware_auth_overhead_001",
            "test_perf_middleware_stack_overhead_001",
            "test_perf_resource_contention_001",
            "test_perf_server_async_handling_efficiency_001",
            "test_perf_server_multi_worker_comparison_001",
            "test_perf_server_single_worker_baseline_001",
            "test_perf_server_timeout_configuration_001",
            "test_perf_uvicorn_connection_handling_001",
            "test_perf_uvicorn_startup_shutdown_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_caching_performance.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "gc",
            "httpx",
            "os",
            "pathlib.Path",
            "psutil",
            "pytest",
            "resource",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_perf_cache_adaptive_management_001",
            "test_perf_cache_concurrent_access_001",
            "test_perf_cache_invalidation_high_load_001",
            "test_perf_cache_multi_level_hierarchy_001",
            "test_perf_cache_provider_instance_reuse_001",
            "test_perf_cache_provider_memory_overhead_001",
            "test_perf_cache_provider_multi_model_001",
            "test_perf_cache_settings_hit_latency_001",
            "test_perf_cache_settings_miss_latency_001",
            "test_perf_cache_warming_strategies_001",
            "test_perf_cross_provider_cache_efficiency_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_circuit_breaker_performance.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "pathlib.Path",
            "pytest",
            "random",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.MagicMock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_perf_circuit_breaker_cascade_prevention_002",
            "test_perf_circuit_breaker_concurrent_state_access_002",
            "test_perf_circuit_breaker_high_frequency_operations_002",
            "test_perf_circuit_breaker_integration_failover_001",
            "test_perf_circuit_breaker_monitoring_analytics_001",
            "test_perf_circuit_breaker_overhead_measurement_001",
            "test_perf_circuit_breaker_provider_level_isolation_001",
            "test_perf_circuit_breaker_state_transitions_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_cost_resource_tracking.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "gc",
            "httpx",
            "os",
            "pathlib.Path",
            "psutil",
            "pytest",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_perf_cost_api_resource_billing_worker_005",
            "test_perf_cost_api_resource_cpu_baseline_001",
            "test_perf_cost_api_resource_db_connections_idle_003",
            "test_perf_cost_api_resource_logging_overhead_004",
            "test_perf_cost_api_resource_memory_baseline_002",
            "test_perf_cost_batching_embed_effectiveness_003",
            "test_perf_cost_realtime_optimization_001",
            "test_perf_cost_resource_efficiency_004",
            "test_perf_cost_token_analytics_002",
            "test_perf_cost_token_max_tokens_enforcement_002",
            "test_perf_cost_token_prompt_overhead_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_database_performance.py": {
        "packages": [
            "asyncio",
            "concurrent.futures",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "os",
            "pathlib.Path",
            "psutil",
            "pytest",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_perf_db_connection_burst_003",
            "test_perf_db_pool_exhaustion_001",
            "test_perf_db_pool_recovery_002",
            "test_perf_db_query_auth_key_lookup_001",
            "test_perf_db_query_optimization_002",
            "test_perf_db_resilience_failover_001",
            "test_perf_db_scaling_capacity_006",
            "test_perf_db_session_overhead_001",
            "test_perf_db_transaction_performance_004"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_llm_specific_performance.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_perf_llm_comprehensive_profiling_011",
            "test_perf_llm_context_window_chat_latency_001",
            "test_perf_llm_context_window_embed_latency_002",
            "test_perf_llm_embedding_batch_throughput_002",
            "test_perf_llm_embedding_single_latency_001",
            "test_perf_llm_stream_latency_interchunk_001",
            "test_perf_llm_throughput_chat_nonstream_002",
            "test_perf_llm_throughput_chat_stream_001",
            "test_perf_llm_ttft_chat_stream_001",
            "test_perf_llm_ttft_prompt_size_impact_003",
            "test_perf_llm_ttft_provider_compare_002"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_load_testing_scenarios.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "pathlib.Path",
            "pytest",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_perf_baseline_load_001",
            "test_perf_capacity_planning_001",
            "test_perf_chaos_provider_failure_001",
            "test_perf_config_change_impact_001",
            "test_perf_endurance_001",
            "test_perf_failover_performance_001",
            "test_perf_mixed_workload_001",
            "test_perf_multi_region_distribution_001",
            "test_perf_peak_load_001",
            "test_perf_ramp_up_001",
            "test_perf_scalability_horizontal_001",
            "test_perf_spike_load_001",
            "test_perf_stress_load_001",
            "test_perf_volume_extreme_data_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_memory_management.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "gc",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "psutil",
            "pytest",
            "statistics",
            "sys",
            "time",
            "tracemalloc",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_perf_mem_automated_profiling_001",
            "test_perf_mem_fragmentation_sustained_load_001",
            "test_perf_mem_gc_behavior_load_001",
            "test_perf_mem_gc_tuning_validation_001",
            "test_perf_mem_leak_endurance_load_001",
            "test_perf_mem_leak_provider_sdk_clients_004",
            "test_perf_mem_leak_streaming_connections_002",
            "test_perf_mem_payload_chat_large_prompt_001",
            "test_perf_mem_payload_embed_large_batch_003",
            "test_perf_mem_realtime_leak_detection_006"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_mixed_workload_performance.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "psutil",
            "pytest",
            "random",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_perf_mixed_dynamic_adaptation_001",
            "test_perf_mixed_fastapi_worker_efficiency_001",
            "test_perf_mixed_gateway_std_load_001",
            "test_perf_mixed_provider_concurrency_001",
            "test_perf_mixed_resource_config_cache_003",
            "test_perf_mixed_resource_db_auth_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_performance_infrastructure_advanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "psutil",
            "pytest",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_perf_infra_continuous_monitoring_validation_001",
            "test_perf_infra_metric_correlation_analysis_001",
            "test_perf_infra_regression_detection_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_performance_testing_infrastructure.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "psutil",
            "pytest",
            "random",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_perf_infra_automated_orchestration_001",
            "test_perf_infra_data_represent_prompt_001",
            "test_perf_infra_data_token_accuracy_003",
            "test_perf_infra_environment_no_interference_003",
            "test_perf_infra_intelligent_analysis_006",
            "test_perf_infra_monitoring_latency_accuracy_001",
            "test_perf_infra_monitoring_resource_accuracy_002",
            "test_perf_infra_test_data_management_003"
        ]
    },
    "/ai-gov-api/tests/integration/7_4_performance/test_provider_specific_performance.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_perf_prov_bedrock_chat_latency_001",
            "test_perf_prov_bedrock_embed_latency_002",
            "test_perf_prov_bedrock_throttling_behavior_003",
            "test_perf_prov_comprehensive_comparison_001",
            "test_perf_prov_consistency_validation_005",
            "test_perf_prov_dynamic_load_balancing_002",
            "test_perf_prov_error_recovery_006",
            "test_perf_prov_optimization_strategies_003",
            "test_perf_prov_vertexai_chat_latency_001",
            "test_perf_prov_vertexai_embed_latency_002",
            "test_perf_prov_vertexai_quota_behavior_003"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_advanced_observability_monitoring.py": {
        "packages": [
            "asyncio",
            "collections.defaultdict",
            "collections.deque",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "dataclasses.field",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "random",
            "statistics",
            "sys",
            "threading",
            "time",
            "typing.Any",
            "typing.Callable",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "uuid"
        ],
        "test_cases": [
            "test_tc_r759_distributed_tracing_001",
            "test_tc_r759_intelligent_alerting_002"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_application_lifecycle_reliability.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "signal",
            "sys",
            "threading",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_billing_queue_drain_lifecycle_002",
            "test_configuration_defaults_safety_006",
            "test_configuration_reload_001",
            "test_configuration_validation_004",
            "test_dependency_health_monitoring_001",
            "test_graceful_degradation_001",
            "test_graceful_shutdown_handling_001",
            "test_health_check_comprehensive_001",
            "test_health_check_readiness_timing_003",
            "test_progressive_startup_001",
            "test_runtime_credential_validation_005",
            "test_startup_dependency_validation_001",
            "test_state_persistence_001",
            "test_tc_r758_recovery_validation_007",
            "test_zero_downtime_updates_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_chaos_engineering_resilience.py": {
        "packages": [
            "asyncio",
            "collections.defaultdict",
            "collections.deque",
            "concurrent.futures",
            "config.config",
            "config.logger",
            "contextlib.asynccontextmanager",
            "dataclasses.dataclass",
            "dataclasses.field",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "random",
            "sys",
            "threading",
            "time",
            "typing.Any",
            "typing.Callable",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_tc_r756_automated_recovery_007",
            "test_tc_r756_memory_pressure_chaos_005",
            "test_tc_r756_multi_failure_cascade_006",
            "test_tc_r756_network_chaos_001",
            "test_tc_r756_rate_limit_chaos_004",
            "test_tc_r756_service_chaos_002",
            "test_tc_r756_timeout_chaos_003"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_circuit_breaker_core.py": {
        "packages": [
            "asyncio",
            "collections.defaultdict",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "dataclasses.field",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_tc_r755_circuit_001_opens_on_failure_threshold",
            "test_tc_r755_circuit_004_half_open_to_open_on_failure",
            "test_tc_r755_circuit_005_fast_fail_503_when_open",
            "test_tc_r755_circuit_006_threshold_configuration_validation",
            "test_tc_r755_circuit_007_granularity_per_provider_model",
            "test_tc_r755_circuit_008_integration_with_failover"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_circuit_breaker_testing.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_circuit_breaker_closed_state_success_003",
            "test_circuit_breaker_configuration_001",
            "test_circuit_breaker_half_open_recovery_002",
            "test_circuit_breaker_metrics_001",
            "test_circuit_breaker_state_transitions_001",
            "test_failure_threshold_detection_001",
            "test_fast_fail_behavior_001",
            "test_half_open_state_testing_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_error_database_async.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_async_error_propagation_002",
            "test_async_resource_cleanup_004",
            "test_database_connection_pool_exhaustion_003",
            "test_database_error_response_handling_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_error_performance_analytics.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_advanced_error_analytics_008",
            "test_error_correlation_tracking_009",
            "test_error_rate_limiting_resilience_010",
            "test_error_response_performance_007",
            "test_multistep_operation_recovery_006"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_error_provider_security.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_cross_provider_error_translation_008",
            "test_error_response_security_005",
            "test_graceful_error_degradation_004",
            "test_provider_error_classification_003",
            "test_provider_error_mapping_consistency_006",
            "test_security_header_validation_007"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_error_response_validation.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "utils.security_validators.SecurityValidator"
        ],
        "test_cases": [
            "test_content_type_errors_001",
            "test_http_method_not_allowed_001",
            "test_oversized_request_001",
            "test_tc_r751_concurrent_errors_001",
            "test_tc_r751_error_consistency_001",
            "test_tc_r751_invalid_model_001",
            "test_tc_r751_malformed_request_001",
            "test_tc_r751_providermap_bedrock_002",
            "test_tc_r751_providermap_generic_004",
            "test_tc_r751_providermap_openai_001",
            "test_tc_r751_providermap_vertex_003",
            "test_tc_r751_rate_limit_errors_001",
            "test_tc_r751_timeout_handling_001",
            "test_tc_r754_error_cascade_prevention_010",
            "test_tc_r754_error_context_preservation_011",
            "test_tc_r754_error_correlation_009"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_intelligent_provider_failover.py": {
        "packages": [
            "asyncio",
            "collections.defaultdict",
            "collections.deque",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "dataclasses.field",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "random",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_tc_r752_intelligent_failover_decision_009",
            "test_tc_r752_multi_provider_health_monitoring_010",
            "test_tc_r752_seamless_provider_transition_011"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_monitoring_logging_infrastructure.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_context_propagation_001",
            "test_log_volume_management_004",
            "test_logging_infrastructure_reliability_001",
            "test_logging_performance_impact_002",
            "test_structured_logging_format_003"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_monitoring_metrics_alerting.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_alerting_reliability_001",
            "test_metrics_collection_accuracy_001",
            "test_metrics_temporal_consistency_002",
            "test_monitoring_system_resilience_003",
            "test_performance_monitoring_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_monitoring_observability_reliability.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_tc_r759_alerting_004",
            "test_tc_r759_context_002",
            "test_tc_r759_dashboard_005",
            "test_tc_r759_logging_001",
            "test_tc_r759_metrics_003"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_provider_failover.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_pf_automatic_failover_001",
            "test_pf_circuit_breaker_001",
            "test_pf_failover_recovery_001",
            "test_pf_graceful_degradation_001",
            "test_pf_load_balancing_001",
            "test_pf_provider_health_monitoring_001",
            "test_pf_retry_mechanism_001",
            "test_tc_r755_multi_provider_redundancy_005",
            "test_tc_r755_provider_capacity_003",
            "test_tc_r755_provider_failback_004",
            "test_tc_r755_provider_rate_limit_002",
            "test_tc_r755_provider_timeout_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_resilience_testing_scenarios.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "random",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_deadlock_prevention_001",
            "test_dependency_failure_cascade_001",
            "test_fault_injection_simulation_001",
            "test_multi_layer_resilience_001",
            "test_resource_exhaustion_resilience_001",
            "test_tc_r756_cascade_001",
            "test_tc_r756_chaos_engineering_001",
            "test_tc_r756_dependency_001",
            "test_tc_r756_dependency_002",
            "test_tc_r756_dependency_003"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_slo_error_budget_validation.py": {
        "packages": [
            "asyncio",
            "collections.deque",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "dataclasses.field",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "random",
            "statistics",
            "sys",
            "threading",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_availability_slo_tracking_001",
            "test_cross_service_slo_correlation_002",
            "test_distributed_trace_slo_tracking_001",
            "test_end_to_end_latency_slo_003",
            "test_error_budget_consumption_001",
            "test_latency_slo_tracking_001",
            "test_slo_reporting_dashboard_001",
            "test_slo_violation_detection_001",
            "test_tc_r757_slo_avail_001",
            "test_tc_r757_slo_avail_002",
            "test_tc_r757_slo_latency_001",
            "test_tc_r757_slo_latency_002",
            "test_trace_sampling_slo_impact_004"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_slo_realtime_monitoring.py": {
        "packages": [
            "asyncio",
            "collections.defaultdict",
            "collections.deque",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "dataclasses.field",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "random",
            "statistics",
            "sys",
            "threading",
            "time",
            "typing.Any",
            "typing.Callable",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_tc_r757_dynamic_error_budget_002",
            "test_tc_r757_predictive_slo_analytics_003",
            "test_tc_r757_realtime_slo_tracking_001",
            "test_tc_r757_slo_driven_autoscaling_004"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_streaming_enhanced_reliability.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.AsyncGenerator",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_advanced_stream_state_management_001",
            "test_concurrent_stream_management_002",
            "test_cross_provider_stream_consistency_006",
            "test_intelligent_stream_error_recovery_004",
            "test_stream_performance_monitoring_005",
            "test_stream_quality_integrity_003"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_streaming_response_reliability.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.AsyncGenerator",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_streaming_chunk_ordering_001",
            "test_streaming_completion_signals_001",
            "test_streaming_network_interruption_001",
            "test_streaming_partial_failure_001",
            "test_streaming_resource_cleanup_001",
            "test_streaming_timeout_handling_001",
            "test_tc_r752_stream_error_recovery_009",
            "test_tc_r752_stream_partial_content_010"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_streaming_response_reliability_core.py": {
        "packages": [
            "asyncio",
            "collections.defaultdict",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "dataclasses.field",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.AsyncIterator",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_tc_r753_partial_001_chunk_delivery_consistency",
            "test_tc_r753_partial_002_connection_interruption_handling",
            "test_tc_r753_partial_003_partial_content_validation",
            "test_tc_r753_partial_004_stream_error_recovery",
            "test_tc_r753_quality_001_streaming_response_quality"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_timeout_retry_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "random",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_adaptive_timeout_management_001",
            "test_advanced_exponential_backoff_002",
            "test_circuit_breaker_integration_003",
            "test_cross_provider_retry_coordination_004",
            "test_retry_state_persistence_005",
            "test_timeout_retry_analytics_006"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_timeout_retry_strategy.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "unittest.mock.Mock",
            "unittest.mock.patch"
        ],
        "test_cases": [
            "test_api_level_timeouts_001",
            "test_database_timeout_handling_001",
            "test_exponential_backoff_001",
            "test_max_retry_attempts_001",
            "test_non_transient_error_handling_001",
            "test_provider_timeout_configuration_001",
            "test_retry_transient_errors_001",
            "test_streaming_timeout_handling_001",
            "test_tc_r753_retry_circuit_breaker_010",
            "test_tc_r753_timeout_progressive_009"
        ]
    },
    "/ai-gov-api/tests/integration/7_5_reliability/test_timeout_retry_strategy_core.py": {
        "packages": [
            "asyncio",
            "collections.defaultdict",
            "collections.deque",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "dataclasses.field",
            "httpx",
            "pathlib.Path",
            "pytest",
            "random",
            "sys",
            "threading",
            "time",
            "typing.Any",
            "typing.Callable",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple"
        ],
        "test_cases": [
            "test_tc_r754_retry_001_intelligent_retry_strategies",
            "test_tc_r754_timeout_001_connect_timeout_handling",
            "test_tc_r754_timeout_002_read_timeout_handling",
            "test_tc_r754_timeout_003_write_timeout_handling",
            "test_tc_r754_timeout_004_total_timeout_coordination",
            "test_with_retry"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_anonymization_masking.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "faker.Faker",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_tdm_anon_blockchain_audit_014",
            "test_tdm_anon_context_preservation_008",
            "test_tdm_anon_data_hashing_004",
            "test_tdm_anon_llm_generated_pii_log_004",
            "test_tdm_anon_log_pii_filter_chat_001",
            "test_tdm_anon_log_pii_filter_embedding_002",
            "test_tdm_anon_log_pii_filter_user_field_003",
            "test_tdm_anon_log_sanitization_003",
            "test_tdm_anon_no_filter_processor_status_005",
            "test_tdm_anon_pii_basic_detection_001",
            "test_tdm_anon_pii_response_filtering_002",
            "test_tdm_anon_privacy_testing_scope_006",
            "test_tdm_anon_realtime_detection_009"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_anonymization_masking_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "faker.Faker",
            "hashlib",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "uuid"
        ],
        "test_cases": [
            "test_tdm_anon_blockchain_audit_011",
            "test_tdm_anon_context_aware_009",
            "test_tdm_anon_cross_domain_013",
            "test_tdm_anon_dynamic_policy_012",
            "test_tdm_anon_federated_014",
            "test_tdm_anon_multilingual_008",
            "test_tdm_anon_realtime_detection_007",
            "test_tdm_anon_synthetic_privacy_010"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_cicd_integration.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_tdm_cicd_automated_validation_001",
            "test_tdm_cicd_blockchain_integrity_013",
            "test_tdm_cicd_intelligent_orchestration_008",
            "test_tdm_cicd_multi_environment_sync_003",
            "test_tdm_cicd_quality_gates_002"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_cicd_integration_enhanced.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "statistics",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_tdm_cicd_ai_optimization_008",
            "test_tdm_cicd_auto_validation_gap_001",
            "test_tdm_cicd_compliance_integration_010",
            "test_tdm_cicd_deploy_coordination_gap_002",
            "test_tdm_cicd_env_provisioning_data_gap_003",
            "test_tdm_cicd_performance_delivery_011",
            "test_tdm_cicd_pipeline_integration_status_005",
            "test_tdm_cicd_rollback_data_capability_gap_004",
            "test_tdm_cicd_self_adaptive_013"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_edge_cases_negative.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "random",
            "re",
            "statistics",
            "string",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple",
            "unicodedata"
        ],
        "test_cases": [
            "test_tdm_edge_ai_adversarial_010",
            "test_tdm_edge_boundary_value_systematic_009",
            "test_tdm_edge_data_repo_status_008",
            "test_tdm_edge_empty_prompt_001",
            "test_tdm_edge_evolutionary_017",
            "test_tdm_edge_llmparam_conflict_006",
            "test_tdm_edge_malformed_data_uri_005",
            "test_tdm_edge_max_tokens_boundary_003",
            "test_tdm_edge_multimodal_011",
            "test_tdm_edge_null_optional_param_002",
            "test_tdm_edge_prompt_injection_variety_007",
            "test_tdm_edge_unicode_complex_004"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_generation.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "faker.Faker",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_tdm_gen_embedding_diversity_001",
            "test_tdm_gen_param_combinations_001",
            "test_tdm_gen_prompt_diversity_001",
            "test_tdm_gen_stress_data_001",
            "test_tdm_gen_synthetic_data_001",
            "test_tdm_param_model_matrix_001",
            "test_tdm_param_scope_validation_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_generation_enhanced.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "faker.Faker",
            "httpx",
            "pathlib.Path",
            "pytest",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List"
        ],
        "test_cases": [
            "test_tdm_gen_advanced_auth_011",
            "test_tdm_gen_collaborative_013",
            "test_tdm_gen_compliance_driven_012",
            "test_tdm_gen_context_aware_010",
            "test_tdm_gen_dynamic_adaptation_008",
            "test_tdm_gen_intelligent_framework_006",
            "test_tdm_gen_multimodal_007",
            "test_tdm_gen_performance_aware_009"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_infrastructure_tooling.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "statistics",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_tdm_infra_ai_optimization_009",
            "test_tdm_infra_auto_scaling_008",
            "test_tdm_infra_generation_framework_001",
            "test_tdm_infra_quality_validation_002",
            "test_tdm_infra_scalable_generation_003",
            "test_tdm_infra_self_healing_014",
            "test_tdm_tool_data_quality_validation_gap_003",
            "test_tdm_tool_generation_faker_gap_001",
            "test_tdm_tool_prompt_templates_gap_002"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_infrastructure_tooling_enhanced.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "statistics",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_tdm_metrics_coverage_measurement_gap_001",
            "test_tdm_metrics_gap_analysis_automation_gap_003",
            "test_tdm_metrics_quality_assessment_gap_002",
            "test_tdm_metrics_reporting_infra_gap_004",
            "test_tdm_tool_advanced_qa_010",
            "test_tdm_tool_cloud_platform_007",
            "test_tdm_tool_federated_management_011",
            "test_tdm_tool_marketplace_014",
            "test_tdm_tool_observability_012",
            "test_tdm_tool_streaming_platform_009"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_isolation.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "uuid"
        ],
        "test_cases": [
            "test_tdm_iso_concurrent_test_interference_002",
            "test_tdm_iso_container_based_isolation_009",
            "test_tdm_iso_database_transaction_isolation_003",
            "test_tdm_iso_multi_tenant_isolation_008",
            "test_tdm_iso_test_setup_teardown_001"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_isolation_enhanced.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "statistics",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "uuid"
        ],
        "test_cases": [
            "test_api_key_operations",
            "test_tdm_iso_apikey_state_001",
            "test_tdm_iso_billing_queue_interference_003",
            "test_tdm_iso_blockchain_verification_014",
            "test_tdm_iso_concurrent_test_execution_005",
            "test_tdm_iso_cryptographic_011",
            "test_tdm_iso_db_state_management_004",
            "test_tdm_iso_realtime_monitoring_010",
            "test_tdm_iso_test_cleanup_mechanisms_006",
            "test_tdm_iso_user_data_002"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_parameterization.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "csv",
            "dataclasses.dataclass",
            "httpx",
            "itertools",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "random",
            "statistics",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple"
        ],
        "test_cases": [
            "test_tdm_param_compliance_validation_014",
            "test_tdm_param_cross_provider_009",
            "test_tdm_param_dynamic_matrix_007",
            "test_tdm_param_external_data_files_005",
            "test_tdm_param_llmparam_variation_chat_002",
            "test_tdm_param_message_structure_chat_004",
            "test_tdm_param_modelid_coverage_001",
            "test_tdm_param_performance_optimized_011"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_parameterization_enhanced.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "csv",
            "dataclasses.dataclass",
            "hashlib",
            "httpx",
            "itertools",
            "json",
            "numpy",
            "os",
            "pathlib.Path",
            "pytest",
            "random",
            "scipy.optimize.differential_evolution",
            "sklearn.model_selection.ParameterGrid",
            "statistics",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple",
            "uuid"
        ],
        "test_cases": [
            "test_tdm_param_adaptive_exploration_013",
            "test_tdm_param_ai_optimization_008",
            "test_tdm_param_compliance_validation_extended_014",
            "test_tdm_param_context_aware_010",
            "test_tdm_param_hierarchical_dependency_012"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_refresh_strategy_advanced.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "datetime.datetime",
            "datetime.timedelta",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "random",
            "statistics",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple"
        ],
        "test_cases": [
            "test_tdm_refresh_ai_staleness_007",
            "test_tdm_refresh_blockchain_provenance_014",
            "test_tdm_refresh_dynamic_pipeline_008"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_refresh_strategy_basic.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "datetime.datetime",
            "datetime.timedelta",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "random",
            "statistics",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple"
        ],
        "test_cases": [
            "test_tdm_refresh_edge_case_expansion_003",
            "test_tdm_refresh_prompt_diversity_update_002",
            "test_tdm_refresh_review_process_001",
            "test_tdm_refresh_stale_data_detection_005"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_security_compliance.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "datetime.datetime",
            "datetime.timedelta",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "re",
            "secrets",
            "statistics",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple"
        ],
        "test_cases": [
            "test_tdm_env_segregation_validation_001",
            "test_tdm_sec_access_control_datasets_003",
            "test_tdm_sec_ai_compliance_011",
            "test_tdm_sec_blockchain_audit_012",
            "test_tdm_sec_classify_policy_001",
            "test_tdm_sec_synthetic_pii_handling_002",
            "test_tdm_sec_zero_trust_009"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_security_compliance_advanced.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "datetime.datetime",
            "datetime.timedelta",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "re",
            "secrets",
            "statistics",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple"
        ],
        "test_cases": [
            "test_tdm_sec_ai_compliance_011",
            "test_tdm_sec_blockchain_audit_012",
            "test_tdm_sec_zero_trust_009"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_security_compliance_basic.py": {
        "packages": [
            "asyncio",
            "base64",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "datetime.datetime",
            "datetime.timedelta",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "re",
            "secrets",
            "statistics",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple"
        ],
        "test_cases": [
            "test_tdm_env_segregation_validation_001",
            "test_tdm_sec_access_control_datasets_003",
            "test_tdm_sec_classify_policy_001",
            "test_tdm_sec_synthetic_pii_handling_002"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_data_version_control.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "datetime.datetime",
            "datetime.timedelta",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "statistics",
            "subprocess",
            "sys",
            "tempfile",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple",
            "uuid"
        ],
        "test_cases": [
            "test_tdm_vcs_automated_versioning_006",
            "test_tdm_vcs_blockchain_provenance_009",
            "test_tdm_vcs_data_dependency_tracking_gap_004",
            "test_tdm_vcs_dependency_tracking_003",
            "test_tdm_vcs_embedded_data_review_001",
            "test_tdm_vcs_historical_data_archival_005",
            "test_tdm_vcs_model_update_process_003",
            "test_tdm_vcs_schema_change_process_002"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_llm_specific_test_data.py": {
        "packages": [
            "asyncio",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "faker.Faker",
            "httpx",
            "json",
            "pathlib.Path",
            "pytest",
            "re",
            "statistics",
            "sys",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional"
        ],
        "test_cases": [
            "test_tdm_llm_multimodal_integration_002",
            "test_tdm_llm_prompt_library_generation_001",
            "test_tdm_llm_semantic_response_validation_007",
            "test_tdm_llm_token_aware_generation_016",
            "test_tdm_llmdata_prompt_lib_capability_004",
            "test_tdm_llmdata_prompt_lib_diversity_002",
            "test_tdm_llmdata_prompt_lib_existence_001",
            "test_tdm_llmdata_prompt_lib_safety_003",
            "test_tdm_llmdata_resp_semantic_validation_gap_006",
            "test_tdm_llmdata_resp_validation_strategy_005",
            "test_tdm_llmdata_token_aware_prompt_generation_008",
            "test_tdm_llmdata_token_aware_tools_gap_007"
        ]
    },
    "/ai-gov-api/tests/integration/7_9_data_management/test_stateful_sequence_data.py": {
        "packages": [
            "asyncio",
            "concurrent.futures.ThreadPoolExecutor",
            "config.config",
            "config.logger",
            "dataclasses.dataclass",
            "datetime.datetime",
            "datetime.timedelta",
            "hashlib",
            "httpx",
            "json",
            "os",
            "pathlib.Path",
            "pytest",
            "random",
            "re",
            "statistics",
            "sys",
            "tempfile",
            "threading",
            "time",
            "typing.Any",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Tuple",
            "uuid"
        ],
        "test_cases": [
            "test_tdm_stateful_ai_conversation_007",
            "test_tdm_stateful_context_accum_001",
            "test_tdm_stateful_context_optimization_009",
            "test_tdm_stateful_context_token_limit_003",
            "test_tdm_stateful_conversation_reset_004",
            "test_tdm_stateful_conversation_templates_gap_005",
            "test_tdm_stateful_cross_session_010",
            "test_tdm_stateful_helper_utilities_gap_006",
            "test_tdm_stateful_multithreaded_008",
            "test_tdm_stateful_role_sequencing_002",
            "test_tdm_stateful_semantic_validation_011"
        ]
    }
}
